// Prisma + PostgreSQL
// Ejecutar: npx prisma generate && npx prisma migrate dev --name init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TicketStatus {
  REJECTED
  PENDING
  PROCESSING
  COMPLETED
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  name         String
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  assignedTickets Ticket[] @relation("Assignee")
  comments        Comment[]
}

model Ticket {
  id          Int           @id @default(autoincrement())
  subject     String
  description String?
  status      TicketStatus  @default(PENDING)
  assigneeId  String?
  assignee    User?         @relation("Assignee", fields: [assigneeId], references: [id])
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  comments    Comment[]
  attachments Attachment[]
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  ticketId  Int
  ticket    Ticket   @relation(fields: [ticketId], references: [id])
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
}

model Attachment {
  id        String   @id @default(cuid())
  ticketId  Int
  ticket    Ticket   @relation(fields: [ticketId], references: [id])
  url       String
  mime      String
  size      Int
  createdAt DateTime @default(now())
}

model Session {
  id        String   @id // token
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  expiresAt DateTime
  @@index([userId])
}